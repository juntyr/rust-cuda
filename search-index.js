var searchIndex = JSON.parse('{\
"rust_cuda":{"doc":"","t":"QQQCCCQQDDDDCCRKRFFFYRKKNNNMMNNNNNNNNNNNNNNMMMNNNXMNNNNNNNNNNKFNNNNNNNNNNCMMMFFFNNHHNNNNNNNNNNNNHHNNNNHNNNNNNNNNOOOOOOPFRKFKFFFFGRFFKKFPFNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNOMMMNNNNNOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNKKKKKCCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNN","n":["assert","assert_eq","assert_ne","common","device","host","print","println","ptx_jit","rustacuda","rustacuda_core","rustacuda_derive","safety","utils","CudaAllocation","CudaAsRust","CudaRepresentation","DeviceAccessible","DeviceConstRef","DeviceMutRef","LendRustToCuda","RustRepresentation","RustToCuda","RustToCudaProxy","as_mut","as_ref","as_ref","as_rust","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","from","from_mut","from_ref","into","into","into","into","kernel","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BorrowFromRust","ShallowCopy","borrow","borrow_mut","deref","deref_mut","fmt","from","into","try_from","try_into","type_id","utils","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","Dim3","Idx3","PTXAllocator","alloc","as_id","block_dim","block_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dealloc","fmt","fmt","from","from","from","grid_dim","index","into","into","into","size","thread_idx","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","x","x","y","y","z","z","Cached","CombinedCudaAlloc","CompilationWatcher","CudaAlloc","CudaDropWrapper","EmptyCudaAlloc","HostAndDeviceConstRef","HostAndDeviceMutRef","HostAndDeviceOwned","HostDeviceBox","KernelJITResult","KernelTraitObject","LaunchConfig","LaunchPackage","Launcher","LendToCuda","NullCudaAlloc","Recompiled","TypedKernel","as_mut","as_ref","as_ref","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compile_with_ptx_jit_args","config","copy_from","copy_to","deref","deref_mut","drop","drop","eq","equivalent","equivalent","fmt","for_device","for_device","for_device","for_host","for_host","for_host","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_launch_package","grid","into","into","into","into","into","into","into","into","into","into","into","kernel","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","new","new","new","new","on_compile","ptx_jit","shared_memory_size","split","stream","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","watcher","with_new","with_new","with_new","FitsIntoDeviceRegister","NoAliasing","SafeDeviceCopy","StackOnly","UnifiedHeapOnly","aliasing","alloc","device_copy","exchange","SplitSliceOverCudaThreadsConstStride","SplitSliceOverCudaThreadsDynamicStride","as_mut","as_mut","as_ref","as_ref","as_rust","as_rust","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","from","from","into","into","lend_to_cuda","lend_to_cuda","lend_to_cuda_mut","lend_to_cuda_mut","move_to_cuda","move_to_cuda","new","new","restore","restore","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_borrow_from_rust","with_borrow_from_rust","with_borrow_from_rust_mut","with_borrow_from_rust_mut","with_moved_from_rust","with_moved_from_rust","UnifiedAllocator","allocate","borrow","borrow_mut","deallocate","from","into","try_from","try_into","type_id","SafeDeviceCopyWrapper","as_rust","borrow","borrow","borrow_mut","clone","clone_into","fmt","from","from","from","from_mut","from_mut_slice","from_ref","from_slice","into","into_inner","into_mut","into_mut_slice","into_ref","into_slice","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","restore","to_owned","try_from","try_into","type_id","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","buffer","wrapper","CudaExchangeBuffer","CudaExchangeBufferDevice","CudaExchangeBufferHost","CudaExchangeItem","as_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","from","from","from","from_vec","into","into","into","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","new","read","read","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","write","write","ExchangeWrapperOnDevice","ExchangeWrapperOnHost","as_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","from","from","into","into","move_to_device","move_to_host","new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"rust_cuda"],[14,"rust_cuda::common"],[61,"rust_cuda::device"],[77,"rust_cuda::device::utils"],[118,"rust_cuda::host"],[264,"rust_cuda::safety"],[269,"rust_cuda::utils"],[273,"rust_cuda::utils::aliasing"],[327,"rust_cuda::utils::alloc"],[337,"rust_cuda::utils::device_copy"],[369,"rust_cuda::utils::exchange"],[371,"rust_cuda::utils::exchange::buffer"],[418,"rust_cuda::utils::exchange::wrapper"],[441,"rustacuda_core::memory"],[442,"rustacuda::error"],[443,"const_type_layout"],[444,"core::clone"],[445,"core::fmt"],[446,"core::fmt"],[447,"core::fmt"],[448,"core::any"],[449,"core::ops::function"],[450,"core::alloc::layout"],[451,"core::option"],[452,"rustacuda::memory::device::device_box"],[453,"rustacuda::error"],[454,"rustacuda::function"],[455,"core::convert"],[456,"core::borrow"],[457,"core::ops::deref"],[458,"core::alloc"],[459,"alloc::vec"]],"d":["Assertion in GPU kernel for one expression is true.","Assertion in GPU kernel for two expressions are equal.","Assertion in GPU kernel for two expressions are not equal.","","","","Alternative of <code>std::print!</code> using CUDA <code>vprintf</code> system-call","Alternative of <code>std::println!</code> using CUDA <code>vprintf</code> system-call","","","","","","","","Safety","","","","","","","Safety","","","","","Safety","Errors","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Errors","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Safety","Safety","Safety","Dimension specified in kernel launching","Indices that the kernel code is running on","Memory allocator using CUDA malloc/free","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","","Errors","Errors","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Lends an immutable copy of <code>&amp;self</code> to CUDA:","Lends a mutable copy of <code>&amp;mut self</code> to CUDA:","Moves <code>self</code> to CUDA iff <code>self</code> is <code>SafeDeviceCopy</code>","Errors","","Safety","Safety","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","Errors","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","When the <code>host</code> feature is set, <code>CudaExchangeBuffer</code> refers to …","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Errors","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Errors","Errors","Errors","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,5,0,0,1,3,1,5,8,6,3,1,6,3,1,3,3,6,6,6,6,3,1,22,22,22,6,3,1,0,8,3,6,3,1,6,3,1,6,3,1,0,0,25,25,25,25,25,25,25,25,25,25,0,26,26,26,0,0,0,29,32,0,0,29,33,32,29,33,32,29,33,32,29,33,32,0,0,29,33,32,33,0,29,33,32,29,33,32,29,33,32,33,32,33,32,33,32,41,0,50,0,0,0,0,0,0,0,0,50,0,0,0,0,0,41,0,35,35,36,37,51,41,38,76,10,43,42,35,36,45,37,51,41,38,76,10,43,42,35,36,45,37,36,37,36,37,38,51,42,42,43,43,43,42,37,37,37,37,35,36,45,35,36,45,51,41,38,76,10,43,43,43,42,42,35,36,45,37,50,37,51,41,38,76,10,43,42,35,36,45,37,51,52,52,52,38,10,35,36,50,37,37,10,51,36,37,51,41,38,76,10,43,42,35,36,45,37,51,41,38,76,10,43,42,35,36,45,37,51,41,38,76,10,43,42,35,36,45,37,51,35,36,45,0,0,0,0,0,0,0,0,0,0,0,57,59,57,59,57,59,57,57,57,59,59,59,57,57,59,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,57,59,0,66,66,66,66,66,66,66,66,66,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,69,71,70,70,69,71,70,69,69,69,71,70,71,70,71,70,69,70,71,70,69,70,70,70,70,69,69,70,69,71,70,69,71,70,69,71,70,69,70,70,70,69,69,0,0,73,73,75,73,75,73,75,75,75,73,75,73,75,73,75,75,73,75,73,75,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],-1,2],[[[3,[-1]]],-1,2],[[[1,[-1]]],-1,2],[[[6,[[5,[],[[4,[-1]]]]]]],-1,[[8,[],[[7,[]]]]]],[[[8,[],[[9,[-1]],[7,[-2]]]],-3],[[12,[[11,[[6,[-2]],[10,[-1,-3]]]]]]],13,[[5,[],[[4,[[8,[],[[9,[-1]],[7,[-2]]]]]]]],14],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[3,[-1]]],[15,2]],[[-1,-2],11,[],[]],[[[6,[-1]],16],17,[18,2,19]],[-1,-1,[]],[-1,[[6,[[20,[-1]]]]],[21,14]],[-1,[[6,[-1]]],5],[-1,-1,[]],[-1,-1,[]],[-1,22,[]],[-1,22,[]],[22,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[8,[],[[9,[-1]],[7,[-2]]]],[10,[-1,-3]]],[[12,[-3]]],13,[[5,[],[[4,[[8,[],[[9,[-1]],[7,[-2]]]]]]]],14],13],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],-2,[],[]],[[[25,[-1]]],-2,[],[]],[[[25,[-1]],16],17,19],[-1,-1,[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],0,[[[3,[[6,[-1]]]],-3],-2,[],[],[[28,[[25,[26]]],[[27,[-2]]]]]],[[[1,[[6,[-1]]]],-3],-2,[],[],[[28,[[25,[26]]],[[27,[-2]]]]]],[[[1,[[6,[-1]]]],-3],-2,[],[],[[28,[26],[[27,[-2]]]]]],0,0,0,[[29,30],31],[[32,33],34],[[],33],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,31,30],11],[[33,16],17],[[32,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],33],[[],34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,34],[[],32],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[35,[-1]]],[[35,[-1]]],2],[[[35,[-1]]],[[36,[-1]]],2],[[[36,[-1]]],[[36,[-1]]],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],[[36,[-1]]],2],[37,37],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[38,[-1]],[40,[[39,[[40,[[39,[31]]]]]]]]],[[12,[41]]],18],0,[[[42,[-1]],-1],[[12,[11]]],2],[[[42,[-1]],-1],[[12,[11]]],2],[[[43,[-1]]],-2,0,[]],[[[43,[-1]]],-2,0,[]],[[[43,[-1]]],11,0],[[[42,[-1]]],11,2],[[37,37],44],[[-1,-2],44,[],[]],[[-1,-2],44,[],[]],[[37,16],17],[[[35,[-1]]],[[1,[-1]]],2],[[[36,[-1]]],[[3,[-1]]],2],[[[45,[-1]]],[[1,[-1]]],[21,2]],[[[35,[-1]]],-1,2],[[[36,[-1]]],-1,2],[[[45,[-1]]],-1,[21,2]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,-1,[]],[-1,-1,[]],[-1,[[43,[-1]]],0],[[[47,[-1]]],[[42,[-1]]],2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[50,[],[[48,[-1]],[49,[-2]]]]],[[51,[[50,[],[[48,[-1]],[49,[-2]]]]]]],18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[52,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[36,[[6,[-1]]]]],[[27,[[23,[-2,-3]]]]]]]],[[52,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[35,[[6,[-1]]]]],[[27,[[23,[-2,-3]]]]]]]],[[52,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[45,[[6,[-1]]]]],[[27,[[23,[-2,-3]]]]]]]],[[55,55],[[12,[[38,[-1]]]]],18],[[-1,-2],[[10,[-1,-2]]],13,13],[[[42,[-1]],-1],[[35,[-1]]],2],[[[42,[-1]],-1],[[36,[-1]]],2],[[56,-1],[[12,[11]]],[]],0,0,[[[10,[-1,-2]]],[[11,[-1,-2]]],13,13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],0,[[-1,-4],[[23,[-2,-3]]],2,[],[[54,[53]]],[[28,[[35,[-1]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],2,[],[[54,[53]]],[[28,[[36,[-1]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[21,2],[],[[54,[53]]],[[28,[[45,[-1]]],[[27,[[23,[-2,-3]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[[57,[-2]]],[[39,[-1]]],[],[[58,[[39,[-1]]]]]],[[[59,[-2]]],[[39,[-1]]],[],[[58,[[39,[-1]]]]]],[[[57,[-2]]],[[39,[-1]]],[],[[60,[[39,[-1]]]]]],[[[59,[-2]]],[[39,[-1]]],[],[[60,[[39,[-1]]]]]],[[[6,[[57,[[6,[-1]]]]]]],-2,5,[]],[[[6,[[59,[[6,[-1]]]]]]],-2,5,[]],[[[57,[-2]]],[[39,[-1]]],[],[[61,[[39,[-1]]]]]],[[[57,[-1]],-2],[[12,[[11,[[6,[-3]],[10,[-4,-2]]]]]]],8,13,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1]],-2],[[12,[[11,[[6,[-3]],[10,[-4,-2]]]]]]],8,13,[],[]],[[[59,[-2]]],[[39,[-1]]],[],[[61,[[39,[-1]]]]]],[[[57,[-2]]],[[39,[-1]]],[],[[62,[[39,[-1]]]]]],[-1,-2,[],[]],[[[59,[-2]]],[[39,[-1]]],[],[[62,[[39,[-1]]]]]],[-1,-2,[],[]],[[[57,[-1]]],[[57,[-1]]],15],[[[59,[-1]]],[[59,[-1]]],15],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[57,[-2]]],-3,[],[[64,[],[[63,[[39,[-1]]]]]]],[]],[[[59,[-2]]],-3,[],[[64,[],[[63,[[39,[-1]]]]]]],[]],[[[57,[-2]]],-3,[],[[65,[],[[63,[[39,[-1]]]]]]],[]],[[[59,[-2]]],-3,[],[[65,[],[[63,[[39,[-1]]]]]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[36,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[36,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[35,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[35,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[45,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[45,[6]]],[[27,[[23,[-2,-3]]]]]]]],[-1,[[57,[-1]]],[]],[[-1,34],[[59,[-1]]],[]],[[[57,[-1]],[10,[-2,-3]]],[[12,[-3]]],8,[],13],[[[59,[-1]],[10,[-2,-3]]],[[12,[-3]]],8,[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[[3,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[3,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,21,[],[[28,[-1],[[27,[-2]]]]]],[[[1,[6]],-3],-2,21,[],[[28,[-1],[[27,[-2]]]]]],0,[[66,30],[[23,[[67,[[39,[31]]]],68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[66,[67,[31]],30],11],[-1,-1,[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],0,[[[6,[[20,[-1]]]]],-2,[21,14],[]],[-1,-2,[],[]],[[[20,[-1]],-2],[[12,[[11,[[6,[-3]],[10,[-4,-2]]]]]]],[21,14],13,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[-1]]],[21,14,15]],[[-1,-2],11,[],[]],[[[20,[-1]],16],17,[21,14,19]],[-1,-1,[]],[-1,[[20,[-1]]],[21,14]],[46,-1,[]],[-1,[[20,[-1]]],[21,14]],[[[39,[-1]]],[[39,[[20,[-1]]]]],[21,14]],[-1,[[20,[-1]]],[21,14]],[[[39,[-1]]],[[39,[[20,[-1]]]]],[21,14]],[-1,-2,[],[]],[[[20,[-1]]],-1,[21,14]],[[[20,[-1]]],-1,[21,14]],[[[39,[[20,[-1]]]]],[[39,[-1]]],[21,14]],[[[20,[-1]]],-1,[21,14]],[[[39,[[20,[-1]]]]],[[39,[-1]]],[21,14]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[36,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[35,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[45,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[[20,[-1]],[10,[-2,-3]]],[[12,[-3]]],[21,14],[],13],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[[[3,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,21,[],[[28,[-1],[[27,[-2]]]]]],0,0,0,0,0,0,[[[69,[-1]]],-1,21],[-1,-2,[],[]],[-1,-2,[],[]],[[[70,[-1]],-2],[[12,[[11,[[6,[-3]],[10,[-4,-2]]]]]]],[21,14],13,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[69,[-1]]],[[69,[-1]]],[15,21]],[[-1,-2],11,[],[]],[[[71,[-1]]],-2,21,[]],[[[70,[-1]]],-2,[21,14],[]],[[[71,[-1]]],-2,21,[]],[[[70,[-1]]],-2,[21,14],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[72,[-1]]],[[12,[[70,[-1]]]]],[21,14]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[36,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[35,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,-4],[[23,[-2,-3]]],[],[],[[54,[53]]],[[28,[[45,[6]]],[[27,[[23,[-2,-3]]]]]]]],[[-1,34],[[12,[[70,[-1]]]]],[15,21,14]],[[[69,[-1]]],-1,21],[[[69,[-1]]],-1,21],[[[70,[-1]],[10,[-2,-3]]],[[12,[-3]]],[21,14],[],13],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[[3,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,[],[],[[28,[[25,[-1]]],[[27,[-2]]]]]],[[[1,[6]],-3],-2,21,[],[[28,[-1],[[27,[-2]]]]]],[[[69,[-1]],-1],11,21],[[[69,[-1]],-1],11,21],0,0,[[[73,[-1]]],[[35,[6]]],[[8,[],[[9,[74]]]]]],[[[73,[-1]]],[[36,[6]]],[[8,[],[[9,[74]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[-1]]],-2,[[8,[],[[9,[74]]]]],[]],[[[75,[-1]]],-2,[[8,[],[[9,[74]]]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[-1]]],[[12,[[73,[-1]]]]],[[8,[],[[9,[74]]]]]],[[[73,[-1]]],[[12,[[75,[-1]]]]],[[8,[],[[9,[74]]]]]],[-1,[[12,[[75,[-1]]]]],[[8,[],[[9,[74]]]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]]],"c":[],"p":[[5,"DeviceMutRef",14],[10,"DeviceCopy",441],[5,"DeviceConstRef",14],[17,"RustRepresentation"],[10,"CudaAsRust",14],[5,"DeviceAccessible",14],[17,"CudaRepresentation"],[10,"RustToCuda",14],[17,"CudaAllocation"],[5,"CombinedCudaAlloc",118],[1,"tuple"],[8,"CudaResult",442],[10,"CudaAlloc",118],[10,"TypeGraphLayout",443],[10,"Clone",444],[5,"Formatter",445],[8,"Result",445],[10,"Sized",446],[10,"Debug",445],[5,"SafeDeviceCopyWrapper",337],[10,"SafeDeviceCopy",264],[10,"RustToCudaProxy",14],[6,"Result",447],[5,"TypeId",448],[5,"ShallowCopy",61],[10,"BorrowFromRust",61],[17,"Output"],[10,"FnOnce",449],[5,"PTXAllocator",77],[5,"Layout",450],[1,"u8"],[5,"Idx3",77],[5,"Dim3",77],[1,"usize"],[5,"HostAndDeviceMutRef",118],[5,"HostAndDeviceConstRef",118],[5,"LaunchConfig",118],[5,"TypedKernel",118],[1,"slice"],[6,"Option",451],[6,"KernelJITResult",118],[5,"HostDeviceBox",118],[5,"CudaDropWrapper",118],[1,"bool"],[5,"HostAndDeviceOwned",118],[1,"never"],[5,"DeviceBox",452],[17,"KernelTraitObject"],[17,"CompilationWatcher"],[10,"Launcher",118],[5,"LaunchPackage",118],[10,"LendToCuda",118],[6,"CudaError",442],[10,"From",453],[1,"str"],[5,"Function",454],[5,"SplitSliceOverCudaThreadsConstStride",273],[10,"AsMut",453],[5,"SplitSliceOverCudaThreadsDynamicStride",273],[10,"AsRef",453],[10,"Borrow",455],[10,"BorrowMut",455],[17,"Target"],[10,"Deref",456],[10,"DerefMut",456],[5,"UnifiedAllocator",327],[5,"NonNull",457],[5,"AllocError",458],[5,"CudaExchangeItem",371],[5,"CudaExchangeBuffer",371],[5,"CudaExchangeBufferDevice",371],[5,"Vec",459],[5,"ExchangeWrapperOnDevice",418],[10,"EmptyCudaAlloc",118],[5,"ExchangeWrapperOnHost",418],[5,"NullCudaAlloc",118]],"b":[[39,"impl-From%3C%26T%3E-for-DeviceAccessible%3CSafeDeviceCopyWrapper%3CT%3E%3E"],[40,"impl-From%3CT%3E-for-DeviceAccessible%3CT%3E"],[281,"impl-Borrow%3C%5BE%5D%3E-for-SplitSliceOverCudaThreadsConstStride%3CT,+STRIDE%3E"],[282,"impl-RustToCuda-for-SplitSliceOverCudaThreadsConstStride%3CT,+STRIDE%3E"],[285,"impl-RustToCuda-for-SplitSliceOverCudaThreadsDynamicStride%3CT%3E"],[286,"impl-Borrow%3C%5BE%5D%3E-for-SplitSliceOverCudaThreadsDynamicStride%3CT%3E"],[400,"impl-CudaExchangeItem%3CT,+M2D,+true%3E"],[401,"impl-CudaExchangeItem%3CT,+true,+M2H%3E"],[416,"impl-CudaExchangeItem%3CT,+M2D,+true%3E"],[417,"impl-CudaExchangeItem%3CT,+true,+M2H%3E"]]},\
"rust_cuda_derive":{"doc":"","t":"YX","n":["LendRustToCuda","kernel"],"q":[[0,"rust_cuda_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]},\
"rust_cuda_ptx_jit":{"doc":"","t":"PFFGPNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Cached","CudaKernel","PtxJITCompiler","PtxJITResult","Recomputed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","from","from","from","get_function","into","into","into","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_arguments"],"q":[[0,"rust_cuda_ptx_jit"],[31,"rustacuda::function"],[32,"core::ffi::c_str"],[33,"rustacuda::error"],[34,"core::result"],[35,"core::any"],[36,"core::option"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Errors","","","","","","","","","",""],"i":[12,0,0,0,12,5,12,1,5,12,1,1,5,12,1,1,5,12,1,5,1,5,12,1,5,12,1,5,12,1,5],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,5],[[4,4],[[6,[1]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[5,[11,[[10,[[11,[[10,[9]]]]]]]]],12]],"c":[],"p":[[5,"CudaKernel",0],[1,"tuple"],[5,"Function",31],[5,"CStr",32],[5,"PtxJITCompiler",0],[8,"CudaResult",33],[6,"Result",34],[5,"TypeId",35],[1,"u8"],[1,"slice"],[6,"Option",36],[6,"PtxJITResult",0]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
