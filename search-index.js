var searchIndex = JSON.parse('{\
"rust_cuda":{"doc":"","t":[14,14,14,0,0,0,14,14,0,0,16,8,16,3,3,3,24,16,8,8,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,23,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,0,10,10,10,3,3,3,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,3,16,8,3,8,3,3,3,3,4,16,3,3,8,8,3,13,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,12,10,10,10,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,8,8,8,8,8,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["assert","assert_eq","assert_ne","common","device","host","print","println","safety","utils","CudaAllocation","CudaAsRust","CudaRepresentation","DeviceAccessible","DeviceConstRef","DeviceMutRef","LendRustToCuda","RustRepresentation","RustToCuda","RustToCudaProxy","as_mut","as_ref","as_ref","as_rust","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","from","from_mut","from_ref","into","into","into","into","kernel","populate_graph","populate_graph","populate_graph","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uninit","uninit","uninit","BorrowFromRust","ShallowCopy","borrow","borrow_mut","deref","deref_mut","fmt","from","into","try_from","try_into","type_id","utils","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","Dim3","Idx3","PTXAllocator","alloc","as_id","block_dim","block_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dealloc","fmt","fmt","from","from","from","grid_dim","index","into","into","into","size","thread_idx","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","x","x","y","y","z","z","Cached","CombinedCudaAlloc","CompilationWatcher","CudaAlloc","CudaDropWrapper","EmptyCudaAlloc","HostAndDeviceConstRef","HostAndDeviceMutRef","HostAndDeviceOwned","HostDeviceBox","KernelJITResult","KernelTraitObject","LaunchConfig","LaunchPackage","Launcher","LendToCuda","NullCudaAlloc","Recompiled","TypedKernel","as_mut","as_ref","as_ref","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compile_with_ptx_jit_args","config","copy_from","copy_to","deref","deref_mut","drop","drop","eq","fmt","for_device","for_device","for_device","for_host","for_host","for_host","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_launch_package","grid","into","into","into","into","into","into","into","into","into","into","into","kernel","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","ne","new","new","new","new","on_compile","ptx_jit","shared_memory_size","split","stream","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","watcher","with_new","with_new","with_new","0","0","FitsIntoDeviceRegister","NoAliasing","SafeDeviceCopy","StackOnly","UnifiedHeapOnly","aliasing","alloc","device_copy","exchange","SplitSliceOverCudaThreadsConstStride","SplitSliceOverCudaThreadsDynamicStride","as_mut","as_mut","as_ref","as_ref","as_rust","as_rust","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","from","from","into","into","lend_to_cuda","lend_to_cuda","lend_to_cuda_mut","lend_to_cuda_mut","move_to_cuda","move_to_cuda","new","new","populate_graph","populate_graph","restore","restore","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uninit","uninit","with_borrow_from_rust","with_borrow_from_rust","with_borrow_from_rust_mut","with_borrow_from_rust_mut","with_moved_from_rust","with_moved_from_rust","UnifiedAllocator","allocate","borrow","borrow_mut","deallocate","from","into","try_from","try_into","type_id","SafeDeviceCopyWrapper","as_rust","borrow","borrow","borrow_mut","clone","clone_into","fmt","from","from","from","from_mut","from_mut_slice","from_ref","from_slice","into","into_inner","into_mut","into_mut_slice","into_ref","into_slice","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","populate_graph","restore","to_owned","try_from","try_into","type_id","uninit","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","buffer","wrapper","CudaExchangeBuffer","CudaExchangeBufferDevice","CudaExchangeBufferHost","CudaExchangeItem","as_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","from","from","from","from_vec","into","into","into","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","new","populate_graph","read","read","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uninit","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","write","write","ExchangeWrapperOnDevice","ExchangeWrapperOnHost","as_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","from","from","into","into","move_to_device","move_to_host","new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["rust_cuda","","","","","","","","","","rust_cuda::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::device","","","","","","","","","","","","","","","","rust_cuda::device::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::host::KernelJITResult","","rust_cuda::safety","","","","","rust_cuda::utils","","","","rust_cuda::utils::aliasing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::alloc","","","","","","","","","","rust_cuda::utils::device_copy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::exchange","","rust_cuda::utils::exchange::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::exchange::wrapper","","","","","","","","","","","","","","","","","","","","","",""],"d":["Assertion in GPU kernel for one expression is true.","Assertion in GPU kernel for two expressions are equal.","Assertion in GPU kernel for two expressions are not equal.","","","","Alternative of <code>std::print!</code> using CUDA <code>vprintf</code> system-call","Alternative of <code>std::println!</code> using CUDA <code>vprintf</code> system-call","","","","Safety","","","","","","","Safety","","","","","Safety","Errors","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Errors","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Safety","Safety","Safety","Dimension specified in kernel launching","Indices that the kernel code is running on","Memory allocator using CUDA malloc/free","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","","Errors","Errors","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Lends an immutable copy of <code>&amp;self</code> to CUDA:","Lends a mutable copy of <code>&amp;mut self</code> to CUDA:","Moves <code>self</code> to CUDA iff <code>self</code> is <code>SafeDeviceCopy</code>","","Errors","","Safety","Safety","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","Errors","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","When the <code>host</code> feature is set, <code>CudaExchangeBuffer</code> refers to …","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Errors","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Errors","Errors","Errors","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,52,0,52,0,0,0,0,15,0,0,2,3,2,15,52,4,3,2,4,3,2,3,3,4,4,4,4,3,2,65,65,65,4,3,2,0,4,3,2,52,3,4,3,2,4,3,2,4,3,2,4,3,2,0,0,22,22,22,22,22,22,22,22,22,22,0,66,66,66,0,0,0,24,27,0,0,24,28,27,24,28,27,24,28,27,24,28,27,0,0,24,28,27,28,0,24,28,27,24,28,27,24,28,27,28,27,28,27,28,27,35,0,67,0,0,0,0,0,0,0,0,67,0,0,0,0,0,35,0,30,30,31,32,42,35,33,68,17,37,36,30,31,39,32,42,35,33,68,17,37,36,30,31,39,32,31,32,31,32,33,42,36,36,37,37,37,36,32,32,30,31,39,30,31,39,42,35,33,68,17,37,37,37,36,36,30,31,39,32,67,32,42,35,33,68,17,37,36,30,31,39,32,42,69,69,69,32,33,17,30,31,67,32,32,17,42,31,32,42,35,33,68,17,37,36,30,31,39,32,42,35,33,68,17,37,36,30,31,39,32,42,35,33,68,17,37,36,30,31,39,32,42,30,31,39,70,71,0,0,0,0,0,0,0,0,0,0,0,48,49,48,49,48,49,48,48,48,49,49,49,48,48,49,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,48,49,0,56,56,56,56,56,56,56,56,56,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,59,61,60,60,59,61,60,59,59,59,61,60,61,60,61,60,59,60,61,60,59,60,60,60,60,59,59,59,60,59,61,60,59,61,60,59,61,60,59,59,60,60,60,59,59,0,0,63,63,64,63,64,63,64,64,64,63,64,63,64,63,64,64,63,64,63,64,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]]]],[4],[5,6],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[7,1]]]]],[[3,[[0,[7,1]]]]]],[[]],[[[4,[[0,[8,1,9]]]],10],11],[[],[[4,[[14,[[0,[12,13]]]]]]]],[15,[[4,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[16],[16],[16],[[[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],[[21,[[20,[[4,[[0,[8,1]]]]]]]]]],[[],[[21,[[20,[[3,[1]]]]]]]],[[],[[21,[[20,[[2,[1]]]]]]]],0,0,[[]],[[]],[22],[22],[[[22,[9]],10],11],[[]],[[]],[[],18],[[],18],[[],19],0,[[[3,[4]],23]],[[[2,[4]],23]],[[[2,[4]],23]],0,0,0,[[24,25],26],[[27,28],29],[[],28],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[24,26,25]],[[28,10],11],[[27,10],11],[[]],[[]],[[]],[[],28],[[],29],[[]],[[]],[[]],[28,29],[[],27],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[30,[1]]],[[30,[1]]]],[[[30,[1]]],[[31,[1]]]],[[[31,[1]]],[[31,[1]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[1]]],[[31,[1]]]],[32,32],[[]],[[]],[[[33,[8]],34],[[6,[35]]]],0,[[[36,[1]]],6],[[[36,[1]]],6],[[[37,[0]]]],[[[37,[0]]]],[[[37,[0]]]],[[[36,[1]]]],[[32,32],38],[[32,10],11],[[[30,[1]]],[[2,[1]]]],[[[31,[1]]],[[3,[1]]]],[[[39,[[0,[12,1]]]]],[[2,[[0,[12,1]]]]]],[[[30,[1]]]],[[[31,[1]]]],[[[39,[[0,[12,1]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[40],0,[[]],[[[41,[1]]],[[36,[1]]]],[[]],[[]],[[]],[[]],[[],42],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[23,[[18,[[44,[43]]]]]],[23,[[18,[[44,[43]]]]]],[23,[[18,[[44,[43]]]]]],[[32,32],38],[[45,45],[[6,[[33,[8]]]]]],[[5,5],[[17,[5,5]]]],[36,[[30,[1]]]],[36,[[31,[1]]]],[46,6],0,0,[[[17,[5,5]]]],0,[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[23,[[18,[[44,[43]]]]]],[23,[[18,[[44,[43]]]]]],[[[0,[12,1]],23],[[18,[[44,[43]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[48,[47]]]],[[[49,[47]]]],[[[48,[50]]]],[[[49,[50]]]],[4],[4],[[[48,[51]]]],[[[48,[52]],5],6],[[]],[[[49,[52]],5],6],[[[49,[51]]]],[[]],[[[48,[53]]]],[[]],[[[49,[53]]]],[[]],[[[48,[7]]],[[48,[7]]]],[[[49,[7]]],[[49,[7]]]],[[]],[[]],[[[48,[54]]]],[[[49,[54]]]],[[[48,[55]]]],[[[49,[55]]]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],48],[29,49],[16],[16],[[[48,[52]],[17,[5]]],[[6,[5]]]],[[[49,[52]],[17,[5]]],[[6,[5]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],[[21,[[20,[48]]]]]],[[],[[21,[[20,[49]]]]]],[[[3,[4]]]],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[2,[4]]]],0,[[56,25],[[18,[57,58]]]],[[]],[[]],[[56,[57,[26]],25]],[[]],[[]],[[],18],[[],18],[[],19],0,[4],[[]],[[[14,[[0,[12,13]]]],5],6],[[]],[[[14,[[0,[7,12,13]]]]],[[14,[[0,[7,12,13]]]]]],[[]],[[[14,[[0,[9,12,13]]]],10],11],[[[0,[12,13]]],[[14,[[0,[12,13]]]]]],[[]],[40],[[],[[14,[[0,[12,13]]]]]],[[]],[[],[[14,[[0,[12,13]]]]]],[[]],[[]],[[[14,[[0,[12,13]]]]],[[0,[12,13]]]],[[[14,[[0,[12,13]]]]]],[[]],[[[14,[[0,[12,13]]]]]],[[]],[[],18],[[],18],[[],18],[16],[[[14,[[0,[12,13]]]],[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],19],[[],[[21,[[20,[[14,[[0,[12,13]]]]]]]]]],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],0,0,0,0,0,0,[[[59,[12]]]],[[]],[[[60,[[0,[12,13]]]],5],6],[[]],[[]],[[]],[[]],[[]],[[[59,[[0,[7,12]]]]],[[59,[[0,[7,12]]]]]],[[]],[[[61,[12]]]],[[[60,[[0,[12,13]]]]]],[[[61,[12]]]],[[[60,[[0,[12,13]]]]]],[[]],[[]],[[]],[[[62,[[0,[12,13]]]]],[[6,[[60,[[0,[12,13]]]]]]]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[29,[[6,[[60,[[0,[7,12,13]]]]]]]],[16],[[[59,[12]]]],[[[59,[12]]]],[[[60,[[0,[12,13]]]],[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],[[21,[[20,[[59,[12]]]]]]]],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[59,[12]],12]],[[[59,[12]],12]],0,0,[[[63,[52]]],[[30,[4]]]],[[[63,[52]]],[[31,[4]]]],[[]],[[]],[[]],[[]],[[[64,[52]]]],[[[64,[52]]]],[[]],[[]],[[]],[[]],[[[64,[52]]],[[6,[[63,[52]]]]]],[[[63,[52]]],[[6,[[64,[52]]]]]],[52,[[6,[[64,[52]]]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19]],"p":[[8,"DeviceCopy"],[3,"DeviceMutRef"],[3,"DeviceConstRef"],[3,"DeviceAccessible"],[8,"CudaAlloc"],[6,"CudaResult"],[8,"Clone"],[8,"Sized"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"SafeDeviceCopy"],[8,"TypeGraphLayout"],[3,"SafeDeviceCopyWrapper"],[8,"CudaAsRust"],[3,"TypeLayoutGraph"],[3,"CombinedCudaAlloc"],[4,"Result"],[3,"TypeId"],[19,"MaybeUninit"],[4,"MaybeUninhabited"],[3,"ShallowCopy"],[8,"FnOnce"],[3,"PTXAllocator"],[3,"Layout"],[15,"u8"],[3,"Idx3"],[3,"Dim3"],[15,"usize"],[3,"HostAndDeviceMutRef"],[3,"HostAndDeviceConstRef"],[3,"LaunchConfig"],[3,"TypedKernel"],[4,"Option"],[4,"KernelJITResult"],[3,"HostDeviceBox"],[3,"CudaDropWrapper"],[15,"bool"],[3,"HostAndDeviceOwned"],[15,"never"],[3,"DeviceBox"],[3,"LaunchPackage"],[4,"CudaError"],[8,"From"],[15,"str"],[3,"Function"],[8,"AsMut"],[3,"SplitSliceOverCudaThreadsConstStride"],[3,"SplitSliceOverCudaThreadsDynamicStride"],[8,"AsRef"],[8,"Borrow"],[8,"RustToCuda"],[8,"BorrowMut"],[8,"Deref"],[8,"DerefMut"],[3,"UnifiedAllocator"],[3,"NonNull"],[3,"AllocError"],[3,"CudaExchangeItem"],[3,"CudaExchangeBuffer"],[3,"CudaExchangeBufferDevice"],[3,"Vec"],[3,"ExchangeWrapperOnDevice"],[3,"ExchangeWrapperOnHost"],[8,"RustToCudaProxy"],[8,"BorrowFromRust"],[8,"Launcher"],[3,"NullCudaAlloc"],[8,"LendToCuda"],[13,"Cached"],[13,"Recompiled"]]},\
"rust_cuda_derive":{"doc":"","t":[24,23],"n":["LendRustToCuda","kernel"],"q":["rust_cuda_derive",""],"d":["",""],"i":[0,0],"f":[0,0],"p":[]},\
"rust_cuda_ptx_jit":{"doc":"","t":[13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Cached","CudaKernel","PtxJITCompiler","PtxJITResult","Recomputed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","from","from","from","get_function","into","into","into","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_arguments","0","0"],"q":["rust_cuda_ptx_jit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda_ptx_jit::PtxJITResult",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Errors","","","","","","","","","","","",""],"i":[9,0,0,0,9,4,9,1,4,9,1,1,4,9,1,1,4,9,1,4,1,4,9,1,4,9,1,4,9,1,4,10,11],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[1,2],[[]],[[]],[[]],[3,4],[[3,3],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[4,8],9],0,0],"p":[[3,"CudaKernel"],[3,"Function"],[3,"CStr"],[3,"PtxJITCompiler"],[6,"CudaResult"],[4,"Result"],[3,"TypeId"],[4,"Option"],[4,"PtxJITResult"],[13,"Cached"],[13,"Recomputed"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
