var searchIndex = JSON.parse('{\
"rust_cuda":{"doc":"","t":[14,14,14,0,0,0,14,14,0,0,16,8,16,3,3,3,24,16,8,8,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,23,11,11,11,10,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,11,11,0,10,10,10,3,3,3,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,3,16,8,3,8,3,3,3,3,4,16,3,3,8,8,3,13,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,12,10,10,10,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,8,8,8,8,8,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["assert","assert_eq","assert_ne","common","device","host","print","println","safety","utils","CudaAllocation","CudaAsRust","CudaRepresentation","DeviceAccessible","DeviceConstRef","DeviceMutRef","LendRustToCuda","RustRepresentation","RustToCuda","RustToCudaProxy","as_mut","as_ref","as_ref","as_rust","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","from","from_mut","from_ref","into","into","into","into","kernel","populate_graph","populate_graph","populate_graph","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BorrowFromRust","ShallowCopy","borrow","borrow_mut","deref","deref_mut","fmt","from","into","try_from","try_into","type_id","utils","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","Dim3","Idx3","PTXAllocator","alloc","as_id","block_dim","block_idx","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dealloc","fmt","fmt","from","from","from","grid_dim","index","into","into","into","size","thread_idx","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","x","x","y","y","z","z","Cached","CombinedCudaAlloc","CompilationWatcher","CudaAlloc","CudaDropWrapper","EmptyCudaAlloc","HostAndDeviceConstRef","HostAndDeviceMutRef","HostAndDeviceOwned","HostDeviceBox","KernelJITResult","KernelTraitObject","LaunchConfig","LaunchPackage","Launcher","LendToCuda","NullCudaAlloc","Recompiled","TypedKernel","as_mut","as_ref","as_ref","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compile_with_ptx_jit_args","config","copy_from","copy_to","deref","deref_mut","drop","drop","eq","fmt","for_device","for_device","for_device","for_host","for_host","for_host","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_launch_package","grid","into","into","into","into","into","into","into","into","into","into","into","kernel","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","new","new","new","new","on_compile","ptx_jit","shared_memory_size","split","stream","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","watcher","with_new","with_new","with_new","0","0","FitsIntoDeviceRegister","NoAliasing","SafeDeviceCopy","StackOnly","UnifiedHeapOnly","aliasing","alloc","device_copy","exchange","SplitSliceOverCudaThreadsConstStride","SplitSliceOverCudaThreadsDynamicStride","as_mut","as_mut","as_ref","as_ref","as_rust","as_rust","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","from","from","into","into","lend_to_cuda","lend_to_cuda","lend_to_cuda_mut","lend_to_cuda_mut","move_to_cuda","move_to_cuda","new","new","populate_graph","populate_graph","restore","restore","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_borrow_from_rust","with_borrow_from_rust","with_borrow_from_rust_mut","with_borrow_from_rust_mut","with_moved_from_rust","with_moved_from_rust","UnifiedAllocator","allocate","borrow","borrow_mut","deallocate","from","into","try_from","try_into","type_id","SafeDeviceCopyWrapper","as_rust","borrow","borrow","borrow_mut","clone","clone_into","fmt","from","from","from","from_mut","from_mut_slice","from_ref","from_slice","into","into_inner","into_mut","into_mut_slice","into_ref","into_slice","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","populate_graph","restore","to_owned","try_from","try_into","type_id","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","buffer","wrapper","CudaExchangeBuffer","CudaExchangeBufferDevice","CudaExchangeBufferHost","CudaExchangeItem","as_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","from","from","from","from_vec","into","into","into","lend_to_cuda","lend_to_cuda_mut","move_to_cuda","new","populate_graph","read","read","restore","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_borrow_from_rust","with_borrow_from_rust_mut","with_moved_from_rust","write","write","ExchangeWrapperOnDevice","ExchangeWrapperOnHost","as_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","from","from","into","into","move_to_device","move_to_host","new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["rust_cuda","","","","","","","","","","rust_cuda::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::device","","","","","","","","","","","","","","","","rust_cuda::device::utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::host::KernelJITResult","","rust_cuda::safety","","","","","rust_cuda::utils","","","","rust_cuda::utils::aliasing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::alloc","","","","","","","","","","rust_cuda::utils::device_copy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::exchange","","rust_cuda::utils::exchange::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda::utils::exchange::wrapper","","","","","","","","","","","","","","","","","","","","","",""],"d":["Assertion in GPU kernel for one expression is true.","Assertion in GPU kernel for two expressions are equal.","Assertion in GPU kernel for two expressions are not equal.","","","","Alternative of <code>std::print!</code> using CUDA <code>vprintf</code> system-call","Alternative of <code>std::println!</code> using CUDA <code>vprintf</code> system-call","","","","Safety","","","","","","","Safety","","","","","Safety","Errors","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Errors","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Safety","Safety","Safety","Dimension specified in kernel launching","Indices that the kernel code is running on","Memory allocator using CUDA malloc/free","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","","Errors","Errors","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Lends an immutable copy of <code>&amp;self</code> to CUDA:","Lends a mutable copy of <code>&amp;mut self</code> to CUDA:","Moves <code>self</code> to CUDA iff <code>self</code> is <code>SafeDeviceCopy</code>","Errors","","Safety","Safety","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors","Errors","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","When the <code>host</code> feature is set, <code>CudaExchangeBuffer</code> refers to …","When the <code>host</code> feature is <strong>not</strong> set, <code>CudaExchangeBuffer</code> …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Errors","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Errors","Errors","Errors","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,50,0,50,0,0,0,0,15,0,0,2,3,2,15,50,4,3,2,4,3,2,3,3,4,4,4,4,3,2,63,63,63,4,3,2,0,4,3,2,50,3,4,3,2,4,3,2,4,3,2,0,0,20,20,20,20,20,20,20,20,20,20,0,64,64,64,0,0,0,22,25,0,0,22,26,25,22,26,25,22,26,25,22,26,25,0,0,22,26,25,26,0,22,26,25,22,26,25,22,26,25,26,25,26,25,26,25,33,0,65,0,0,0,0,0,0,0,0,65,0,0,0,0,0,33,0,28,28,29,30,40,33,31,66,17,35,34,28,29,37,30,40,33,31,66,17,35,34,28,29,37,30,29,30,29,30,31,40,34,34,35,35,35,34,30,30,28,29,37,28,29,37,40,33,31,66,17,35,35,35,34,34,28,29,37,30,65,30,40,33,31,66,17,35,34,28,29,37,30,40,67,67,67,31,17,28,29,65,30,30,17,40,29,30,40,33,31,66,17,35,34,28,29,37,30,40,33,31,66,17,35,34,28,29,37,30,40,33,31,66,17,35,34,28,29,37,30,40,28,29,37,68,69,0,0,0,0,0,0,0,0,0,0,0,46,47,46,47,46,47,46,46,46,47,47,47,46,46,47,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,0,54,54,54,54,54,54,54,54,54,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,57,59,58,58,57,59,58,57,57,57,59,58,59,58,59,58,57,58,59,58,57,58,58,58,58,57,57,57,58,57,59,58,57,59,58,57,59,58,57,58,58,58,57,57,0,0,61,61,62,61,62,61,62,62,62,61,62,61,62,61,62,62,61,62,61,62,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]]]],[4],[5,6],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[7,1]]]]],[[3,[[0,[7,1]]]]]],[[]],[[[4,[[0,[8,1,9]]]],10],11],[[]],[[],[[4,[[14,[[0,[12,13]]]]]]]],[15,[[4,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[16],[16],[16],[[[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],0,0,[[]],[[]],[20],[20],[[[20,[9]],10],11],[[]],[[]],[[],18],[[],18],[[],19],0,[[[3,[4]],21]],[[[2,[4]],21]],[[[2,[4]],21]],0,0,0,[[22,23],24],[[25,26],27],[[],26],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[22,24,23]],[[26,10],11],[[25,10],11],[[]],[[]],[[]],[[],26],[[],27],[[]],[[]],[[]],[26,27],[[],25],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[28,[1]]],[[28,[1]]]],[[[28,[1]]],[[29,[1]]]],[[[29,[1]]],[[29,[1]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[1]]],[[29,[1]]]],[30,30],[[]],[[]],[[[31,[8]],32],[[6,[33]]]],0,[[[34,[1]]],6],[[[34,[1]]],6],[[[35,[0]]]],[[[35,[0]]]],[[[35,[0]]]],[[[34,[1]]]],[[30,30],36],[[30,10],11],[[[28,[1]]],[[2,[1]]]],[[[29,[1]]],[[3,[1]]]],[[[37,[[0,[12,1]]]]],[[2,[[0,[12,1]]]]]],[[[28,[1]]]],[[[29,[1]]]],[[[37,[[0,[12,1]]]]]],[[]],[[]],[[]],[[]],[[]],0,[38],[[]],[[[39,[1]]],[[34,[1]]]],[[]],[[]],[[]],[[]],[[]],[[],40],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,[[18,[[42,[41]]]]]],[21,[[18,[[42,[41]]]]]],[21,[[18,[[42,[41]]]]]],[[43,43],[[6,[[31,[8]]]]]],[[5,5],[[17,[5,5]]]],[34,[[28,[1]]]],[34,[[29,[1]]]],[44,6],0,0,[[[17,[5,5]]]],0,[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[21,[[18,[[42,[41]]]]]],[21,[[18,[[42,[41]]]]]],[[[0,[12,1]],21],[[18,[[42,[41]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[46,[45]]]],[[[47,[45]]]],[[[46,[48]]]],[[[47,[48]]]],[4],[4],[[]],[[[46,[49]]]],[[[46,[50]],5],6],[[[47,[49]]]],[[[47,[50]],5],6],[[]],[[]],[[[46,[51]]]],[[]],[[[47,[51]]]],[[[46,[7]]],[[46,[7]]]],[[[47,[7]]],[[47,[7]]]],[[]],[[]],[[[46,[52]]]],[[[47,[52]]]],[[[46,[53]]]],[[[47,[53]]]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],46],[27,47],[16],[16],[[[46,[50]],[17,[5]]],[[6,[5]]]],[[[47,[50]],[17,[5]]],[[6,[5]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[[3,[4]]]],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[2,[4]]]],0,[[54,23],[[18,[55,56]]]],[[]],[[]],[[54,[55,[24]],23]],[[]],[[]],[[],18],[[],18],[[],19],0,[4],[[[14,[[0,[12,13]]]],5],6],[[]],[[]],[[[14,[[0,[7,12,13]]]]],[[14,[[0,[7,12,13]]]]]],[[]],[[[14,[[0,[9,12,13]]]],10],11],[[]],[38],[[[0,[12,13]]],[[14,[[0,[12,13]]]]]],[[],[[14,[[0,[12,13]]]]]],[[]],[[],[[14,[[0,[12,13]]]]]],[[]],[[]],[[[14,[[0,[12,13]]]]],[[0,[12,13]]]],[[[14,[[0,[12,13]]]]]],[[]],[[[14,[[0,[12,13]]]]]],[[]],[[],18],[[],18],[[],18],[16],[[[14,[[0,[12,13]]]],[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],19],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],0,0,0,0,0,0,[[[57,[12]]]],[[]],[[[58,[[0,[12,13]]]],5],6],[[]],[[]],[[]],[[]],[[]],[[[57,[[0,[7,12]]]]],[[57,[[0,[7,12]]]]]],[[]],[[[59,[12]]]],[[[58,[[0,[12,13]]]]]],[[[59,[12]]]],[[[58,[[0,[12,13]]]]]],[[]],[[]],[[]],[[[60,[[0,[12,13]]]]],[[6,[[58,[[0,[12,13]]]]]]]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[27,[[6,[[58,[[0,[7,12,13]]]]]]]],[16],[[[57,[12]]]],[[[57,[12]]]],[[[58,[[0,[12,13]]]],[17,[5]]],[[6,[5]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[[3,[4]]]],[[[2,[4]]]],[[[2,[4]]]],[[[57,[12]],12]],[[[57,[12]],12]],0,0,[[[61,[50]]],[[28,[4]]]],[[[61,[50]]],[[29,[4]]]],[[]],[[]],[[]],[[]],[[[62,[50]]]],[[[62,[50]]]],[[]],[[]],[[]],[[]],[[[62,[50]]],[[6,[[61,[50]]]]]],[[[61,[50]]],[[6,[[62,[50]]]]]],[50,[[6,[[62,[50]]]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19]],"p":[[8,"DeviceCopy"],[3,"DeviceMutRef"],[3,"DeviceConstRef"],[3,"DeviceAccessible"],[8,"CudaAlloc"],[6,"CudaResult"],[8,"Clone"],[8,"Sized"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"SafeDeviceCopy"],[8,"TypeLayout"],[3,"SafeDeviceCopyWrapper"],[8,"CudaAsRust"],[3,"TypeLayoutGraph"],[3,"CombinedCudaAlloc"],[4,"Result"],[3,"TypeId"],[3,"ShallowCopy"],[8,"FnOnce"],[3,"PTXAllocator"],[3,"Layout"],[15,"u8"],[3,"Idx3"],[3,"Dim3"],[15,"usize"],[3,"HostAndDeviceMutRef"],[3,"HostAndDeviceConstRef"],[3,"LaunchConfig"],[3,"TypedKernel"],[4,"Option"],[4,"KernelJITResult"],[3,"HostDeviceBox"],[3,"CudaDropWrapper"],[15,"bool"],[3,"HostAndDeviceOwned"],[15,"never"],[3,"DeviceBox"],[3,"LaunchPackage"],[4,"CudaError"],[8,"From"],[15,"str"],[3,"Function"],[8,"AsMut"],[3,"SplitSliceOverCudaThreadsConstStride"],[3,"SplitSliceOverCudaThreadsDynamicStride"],[8,"AsRef"],[8,"Borrow"],[8,"RustToCuda"],[8,"BorrowMut"],[8,"Deref"],[8,"DerefMut"],[3,"UnifiedAllocator"],[3,"NonNull"],[3,"AllocError"],[3,"CudaExchangeItem"],[3,"CudaExchangeBuffer"],[3,"CudaExchangeBufferDevice"],[3,"Vec"],[3,"ExchangeWrapperOnDevice"],[3,"ExchangeWrapperOnHost"],[8,"RustToCudaProxy"],[8,"BorrowFromRust"],[8,"Launcher"],[3,"NullCudaAlloc"],[8,"LendToCuda"],[13,"Cached"],[13,"Recompiled"]]},\
"rust_cuda_derive":{"doc":"","t":[24,23],"n":["LendRustToCuda","kernel"],"q":["rust_cuda_derive",""],"d":["",""],"i":[0,0],"f":[0,0],"p":[]},\
"rust_cuda_ptx_jit":{"doc":"","t":[13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Cached","CudaKernel","PtxJITCompiler","PtxJITResult","Recomputed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drop","from","from","from","get_function","into","into","into","new","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_arguments","0","0"],"q":["rust_cuda_ptx_jit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_cuda_ptx_jit::PtxJITResult",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Errors","","","","","","","","","","","",""],"i":[9,0,0,0,9,4,9,1,4,9,1,1,4,9,1,1,4,9,1,4,1,4,9,1,4,9,1,4,9,1,4,10,11],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[1,2],[[]],[[]],[[]],[3,4],[[3,3],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[4,8],9],0,0],"p":[[3,"CudaKernel"],[3,"Function"],[3,"CStr"],[3,"PtxJITCompiler"],[6,"CudaResult"],[4,"Result"],[3,"TypeId"],[4,"Option"],[4,"PtxJITResult"],[13,"Cached"],[13,"Recomputed"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
