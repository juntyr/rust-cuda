name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '0 0 * * MON'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          target: nvptx64-nvidia-cuda
          override: true

      - name: Install the rust-ptx-linker
        run: |
          wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh
          sudo ./llvm.sh $(rustc --version -v | grep -oP "LLVM version: \K\d+")
          rm llvm.sh
          cargo install rust-ptx-linker --git https://github.com/juntyr/rust-ptx-linker --force

      - name: Check without features on CPU
        run: |
          cargo check

      - name: Check with alloc feature on CPU
        run: |
          cargo check \
            --features alloc

      - name: Check with derive feature on CPU
        run: |
          cargo check \
            --features derive

      - name: Check with host feature on CPU
        run: |
          cargo check \
            --features host

      - name: Check with host,derive,alloc features on CPU
        run: |
          cargo check \
            --features host,derive,alloc

      - name: Check without features on CUDA
        run: |
          cargo check \
            --target nvptx64-nvidia-cuda

      - name: Check with alloc feature on CUDA
        run: |
          cargo check \
            --target nvptx64-nvidia-cuda \
            --features alloc

      - name: Check with derive feature on CUDA
        run: |
          cargo check \
            --target nvptx64-nvidia-cuda \
            --features derive

      - name: Check all workspace targets
        run: |
          cargo check \
            --workspace \
            --all-targets

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.14
        with:
          method: network
          use-github-cache: false
          use-local-cache: false

      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          target: nvptx64-nvidia-cuda
          override: true

      - name: Install the rust-ptx-linker
        run: |
          wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh
          sudo ./llvm.sh $(rustc --version -v | grep -oP "LLVM version: \K\d+")
          rm llvm.sh
          cargo install rust-ptx-linker --git https://github.com/juntyr/rust-ptx-linker --force
      
      - name: Run the test-suite
        run: |
          cargo test --workspace --no-fail-fast

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true

      - name: Check the code formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2
      
      - name: Install the Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          components: clippy
          target: nvptx64-nvidia-cuda
          override: true

      - name: Install the rust-ptx-linker
        run: |
          wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh
          sudo ./llvm.sh $(rustc --version -v | grep -oP "LLVM version: \K\d+")
          rm llvm.sh
          cargo install rust-ptx-linker --git https://github.com/juntyr/rust-ptx-linker --force

      - name: Check the code style without features on CPU
        run: |
          cargo clippy \
            -- -D warnings

      - name: Check the code style with alloc feature on CPU
        run: |
          cargo clippy \
            --features alloc \
            -- -D warnings

      - name: Check the code style with derive feature on CPU
        run: |
          cargo clippy \
            --features derive \
            -- -D warnings

      - name: Check the code style with host feature on CPU
        run: |
          cargo clippy \
            --features host \
            -- -D warnings

      - name: Check the code style with host,derive,alloc features on CPU
        run: |
          cargo clippy \
            --features host,derive,alloc \
            -- -D warnings

      - name: Check the code style without features on CUDA
        run: |
          cargo clippy \
            --target nvptx64-nvidia-cuda \
            -- -D warnings
      
      - name: Check the code style with alloc feature on CUDA
        run: |
          cargo clippy \
            --target nvptx64-nvidia-cuda \
            --features alloc \
            -- -D warnings

      - name: Check the code style with derive feature on CUDA
        run: |
          cargo clippy \
            --target nvptx64-nvidia-cuda \
            --features derive \
            -- -D warnings

      - name: Check the code style for all workspace targets
        run: |
          cargo clippy \
            --workspace \
            --all-targets \
            -- -D warnings
